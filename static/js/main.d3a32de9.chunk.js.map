{"version":3,"sources":["utils/api.js","actions/sessionActions.js","actions/userActions.js","reducers/sessionReducer.js","reducers/userReducer.js","reducers/index.js","store/configureStore.js","components/TopBar.js","components/Dashboard.js","components/Login.js","components/SignUp.js","components/ShareList.js","components/UserShareList.js","components/RealtimeShare.js","components/Home.js","theme/palette.js","theme/typography.js","theme/index.js","App.js","serviceWorker.js","index.js"],"names":["api","axios","create","baseURL","timeout","headers","defaults","common","localStorage","getItem","login","payload","history","dispatch","type","post","then","res","token","get","setItem","push","window","location","reload","loginSuccess","catch","err","loginFail","response","data","error","getUserSuccess","getUserFail","sessionReducer","a","state","action","loggedIn","loading","console","log","userReducer","rootReducer","combineReducers","session","user","configureStore","middlewareEnhancer","composeWithDevTools","applyMiddleware","thunk","composedEnhancers","compose","createStore","useStyles","makeStyles","root","boxShadow","Topbar","props","className","rest","classes","AppBar","clsx","color","Toolbar","to","alt","src","theme","content","height","paddingTop","breakpoints","up","Auth","children","TopBar","fallback","LinearProgress","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","info","withRouter","useState","setForm","useDispatch","setError","handleSubmit","event","preventDefault","handleChange","persist","target","name","value","Container","component","maxWidth","CssBaseline","Avatar","Typography","variant","noValidate","TextField","required","fullWidth","id","label","autoComplete","autoFocus","onChange","FormControlLabel","control","Checkbox","Button","onClick","Grid","container","item","xs","Link","href","Alert","severity","SignUp","setInfo","justify","table","minWidth","ShareListTable","sharesList","setSharesList","page","setPage","totalDocs","setTotalDocs","useEffect","fetchSharesList","Number","docs","Paper","TableContainer","Table","size","aria-label","TableHead","TableRow","TableCell","align","TableBody","map","row","key","companyName","companyId","shareId","shareType","shareValue","TablePagination","rowsPerPageOptions","count","rowsPerPage","onChangePage","newPage","UserSharesListTable","socketIOClient","on","marginLeft","useSelector","md","gutterBottom","clear","lg","sm","ShareList","UserShareList","white","black","primary","contrastText","dark","colors","teal","light","blue","red","text","blueGrey","link","icon","background","default","divider","grey","h1","fontWeight","fontSize","letterSpacing","lineHeight","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","button","caption","overline","textTransform","createMuiTheme","typography","App","email","routes","path","Login","exact","Home","ThemeProvider","utils","MomentUtils","Dashboard","Boolean","hostname","match","store","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.d3a32de9.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n    baseURL: `http://ec2-13-233-36-233.ap-south-1.compute.amazonaws.com/api/api`,\r\n    timeout: 1000 * 60 * 3, //in ms\r\n    headers: {\r\n        \"Content-Type\": \"application/json\",\r\n    }\r\n});\r\napi.defaults.headers.common['token'] = localStorage.getItem(\"token\");\r\n\r\nexport default api;","import api from \"../utils/api\";\r\nimport { get } from \"lodash\";\r\n\r\nexport const SESSION_LOGIN_START = 'SESSION_LOGIN_START';\r\nexport const SESSION_LOGIN_SUCCESS = 'SESSION_LOGIN_SUCCESS';\r\nexport const SESSION_LOGIN_FAIL = 'SESSION_LOGIN_FAIL';\r\nexport const SESSION_LOGOUT = 'SESSION_LOGOUT';\r\n\r\nexport const login = (payload, history) => dispatch => {\r\n  dispatch({\r\n    type: SESSION_LOGIN_START,\r\n  });\r\n  api.post(`/auth/login`, { ...payload })\r\n    .then(res => {\r\n      const token = get(res, \"data\", null);\r\n      localStorage.setItem(\"token\", token);\r\n      history.push(`/home`);\r\n      window.location.reload(false);\r\n      dispatch(loginSuccess())\r\n    })\r\n    .catch(err => {\r\n      dispatch(loginFail(err.response.data))\r\n    });\r\n};\r\n\r\nexport const logout = () => dispatch => {\r\n  localStorage.clear();\r\n  window.location.reload(false);\r\n  dispatch({\r\n    type: SESSION_LOGOUT\r\n  });\r\n}\r\n  \r\n\r\nconst loginSuccess = () => ({\r\n  type: SESSION_LOGIN_SUCCESS,\r\n});\r\n  \r\nconst loginFail = error => ({\r\n  type: SESSION_LOGIN_FAIL,\r\n  payload: {\r\n    error\r\n  }\r\n});","import api from \"../utils/api\";\r\n\r\nexport const GET_USER = 'GET_USER';\r\nexport const GET_USER_SUCCESS = 'GET_USER_SUCCESS';\r\nexport const GET_USER_FAILURE = 'GET_USER_FAILURE';\r\n\r\nexport const getUser = () => dispatch => {\r\n  dispatch({\r\n    type: GET_USER,\r\n  });\r\n  api.post(`/user/getuser`, {})\r\n    .then(res => {\r\n      dispatch(getUserSuccess(res.data));\r\n    })\r\n    .catch(err => {\r\n      dispatch(getUserFail(err));\r\n    });\r\n};\r\n  \r\nconst getUserSuccess = (payload) => ({\r\n  type: GET_USER_SUCCESS,\r\n  payload,\r\n});\r\n  \r\nconst getUserFail = error => ({\r\n  type: GET_USER_FAILURE,\r\n  payload: {\r\n    error\r\n  }\r\n});","import * as actionTypes from '../actions';\r\n\r\nconst sessionReducer = async (state = {}, action) => {\r\n  switch (action.type) {\r\n\r\n    case actionTypes.SESSION_LOGIN_START: {\r\n      return {\r\n        ...state,\r\n        loggedIn: false,\r\n        loading: true,\r\n        error: null,\r\n      };\r\n    }\r\n\r\n    case actionTypes.SESSION_LOGIN_SUCCESS: {\r\n      return {\r\n        loading: false,\r\n        loggedIn: true,\r\n        ...state,\r\n      };\r\n    }\r\n\r\n    case actionTypes.SESSION_LOGIN_FAIL:\r\n      console.log(action);\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        loggedIn: false,\r\n        error: action.payload.error\r\n      };\r\n\r\n    case actionTypes.SESSION_LOGOUT: {\r\n      return {\r\n        ...state,\r\n        loggedIn: false,\r\n      };\r\n    }\r\n\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nexport default sessionReducer;","import * as actionTypes from '../actions';\r\n\r\nconst userReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.GET_USER: {\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    }\r\n\r\n    case actionTypes.GET_USER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: null,\r\n        ...action.payload\r\n      };\r\n    case actionTypes.GET_USER_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload.error\r\n      };\r\n\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nexport default userReducer;\r\n","import { combineReducers } from 'redux';\r\n\r\nimport sessionReducer from './sessionReducer';\r\nimport userReducer from './userReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  session: sessionReducer,\r\n  user: userReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { applyMiddleware, createStore, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nimport rootReducer from '../reducers';\r\n\r\nconst configureStore = () => {\r\n  const middlewareEnhancer = composeWithDevTools(\r\n    applyMiddleware(thunk)\r\n  );\r\n  const composedEnhancers = compose(middlewareEnhancer);\r\n  const store = createStore(rootReducer, composedEnhancers);\r\n\r\n  return store;\r\n};\r\n\r\nexport default configureStore;","import React from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { AppBar, Toolbar } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    boxShadow: 'none'\r\n  }\r\n}));\r\n\r\nconst Topbar = props => {\r\n  const { className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <AppBar\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n      color=\"primary\"\r\n    >\r\n      <Toolbar>\r\n        <RouterLink to=\"/\">\r\n          <img\r\n            alt=\"Logo\"\r\n            src=\"/logo.svg\"\r\n          />\r\n        </RouterLink>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nTopbar.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Topbar;\r\n","import React, { Fragment, Suspense } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { LinearProgress } from '@material-ui/core';\r\n\r\nimport TopBar from './TopBar';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  content: {\r\n    height: '100%',\r\n    paddingTop: 56,\r\n    [theme.breakpoints.up('sm')]: {\r\n      paddingTop: 64\r\n    }\r\n  }\r\n}));\r\n\r\nconst Auth = ({children}) => {\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Fragment>\r\n      <TopBar />\r\n      <main className={classes.content}>\r\n        <Suspense fallback={<LinearProgress />}>\r\n          <TopBar />\r\n          {children}\r\n        </Suspense>\r\n      </main>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nAuth.propTypes = {\r\n  route: PropTypes.object\r\n};\r\n\r\nexport default Auth;\r\n","import React, { useState } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { login } from '../actions';\r\nimport api from '../utils/api';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  info: {\r\n    width: '100%',\r\n    '& > * + *': {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  }\r\n}));\r\n\r\nconst Login = props => {\r\n  const classes = useStyles();\r\n  const [form, setForm] = useState({});\r\n  const { history } = props;\r\n  const dispatch = useDispatch();\r\n  const [error, setError] = useState(null);\r\n\r\n  const handleSubmit = async event => {\r\n    event.preventDefault();\r\n    dispatch(login({ ...form }, history));\r\n    try {\r\n      const { data } = await api.post(`/auth/login`, { ...form });\r\n    } catch (error) {\r\n      setError(error.response.data);\r\n    }\r\n  };\r\n\r\n  const handleChange = event => {\r\n    event.persist();\r\n    setForm(form => ({\r\n      ...form,\r\n      [event.target.name]: event.target.value\r\n    }));\r\n  }\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign in\r\n        </Typography>\r\n        <form className={classes.form} noValidate>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Email Address\"\r\n            name=\"email\"\r\n            autoComplete=\"email\"\r\n            autoFocus\r\n            onChange={handleChange}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            onChange={handleChange}\r\n          />\r\n          <FormControlLabel\r\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n            label=\"Remember me\"\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            onClick={handleSubmit}\r\n          >\r\n            Sign In\r\n          </Button>\r\n          <Grid container>\r\n            <Grid item xs>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                Forgot password?\r\n              </Link>\r\n            </Grid>\r\n            <Grid item>\r\n              <Link href=\"/register\" variant=\"body2\">\r\n                {\"Don't have an account? Sign Up\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n        <div className={classes.info}>\r\n          {error &&\r\n          <Alert severity=\"error\">{error}</Alert>}\r\n        </div>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default withRouter(Login);","import React, { useState } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\nimport api from '../utils/api';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  info: {\r\n    width: '100%',\r\n    '& > * + *': {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  }\r\n}));\r\n\r\nexport default function SignUp() {\r\n  const classes = useStyles();\r\n  const [form, setForm] = useState({});\r\n  const [info, setInfo] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  const handleChange = event => {\r\n    setInfo(null);\r\n    event.persist();\r\n    setForm(form => ({\r\n      ...form,\r\n      [event.target.name]: event.target.value\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async event => {\r\n    event.preventDefault();\r\n    try {\r\n      const { data } = await api.post(`/auth/register`, { ...form });\r\n      setInfo(data);\r\n    } catch (error) {\r\n      setError(error.response.data);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign up\r\n        </Typography>\r\n        <form className={classes.form} noValidate>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                autoComplete=\"name\"\r\n                name=\"name\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"name\"\r\n                label=\"Name\"\r\n                autoFocus\r\n                onChange={handleChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                onChange={handleChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                onChange={handleChange}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            onClick={handleSubmit}\r\n          >\r\n            Sign Up\r\n          </Button>\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n              <Link href=\"/login\" variant=\"body2\">\r\n                Already have an account? Sign in\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n        <div className={classes.info}>\r\n          {info && \r\n          <Alert severity=\"info\">{info}</Alert>}\r\n          {error &&\r\n          <Alert severity=\"error\">{error}</Alert>}\r\n        </div>\r\n      </div>\r\n    </Container>\r\n  );\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\n\r\nimport api from '../utils/api';\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n});\r\n\r\nconst ShareListTable = () => {\r\n  const classes = useStyles();\r\n  const [sharesList, setSharesList] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [totalDocs, setTotalDocs] = useState(0);\r\n\r\n  useEffect(() => {\r\n    fetchSharesList(page);\r\n  }, [page]);\r\n\r\n  const fetchSharesList = async (page) => {\r\n      try {\r\n        const { data } = await api.get(`/shares/list?page=${Number(page)+1}`);\r\n        setSharesList(data.docs);\r\n        setTotalDocs(data.totalDocs);\r\n      } catch (error) {\r\n          console.error(error);\r\n      }\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  return (\r\n    <Paper>\r\n    <TableContainer component={Paper}>\r\n      <Table size=\"small\" aria-label=\"a dense table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Company Name</TableCell>\r\n            <TableCell align=\"left\">Company Id</TableCell>\r\n            <TableCell align=\"left\">Share ID</TableCell>\r\n            <TableCell align=\"left\">Share Type</TableCell>\r\n            <TableCell align=\"right\">Value</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {sharesList.map((row) => (\r\n            <TableRow key={row.name}>\r\n              <TableCell align=\"left\">\r\n                {row.companyName}\r\n              </TableCell>\r\n              <TableCell align=\"left\">{row.companyId}</TableCell>\r\n              <TableCell align=\"left\">{row.shareId}</TableCell>\r\n              <TableCell align=\"left\">{row.shareType}</TableCell>\r\n              <TableCell align=\"right\">{row.shareValue}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n    <TablePagination\r\n    rowsPerPageOptions={[10]}\r\n    component=\"div\"\r\n    count={totalDocs}\r\n    rowsPerPage={10}\r\n    page={page}\r\n    onChangePage={handleChangePage}\r\n  />\r\n  </Paper>\r\n  );\r\n};\r\n\r\nexport default ShareListTable;","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\n\r\nimport api from '../utils/api';\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n});\r\n\r\nconst UserSharesListTable = () => {\r\n  const classes = useStyles();\r\n  const [sharesList, setSharesList] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [totalDocs, setTotalDocs] = useState(0);\r\n\r\n  useEffect(() => {\r\n    fetchSharesList(page);\r\n  }, [page]);\r\n\r\n  const fetchSharesList = async (page) => {\r\n      try {\r\n        const { data } = await api.get(`/shares/user/list?page=${Number(page)+1}`);\r\n        setSharesList(data.docs);\r\n        setTotalDocs(data.totalDocs);\r\n      } catch (error) {\r\n          console.error(error);\r\n      }\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  return (\r\n    <Paper>\r\n    <TableContainer component={Paper}>\r\n      <Table size=\"small\" aria-label=\"a dense table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Company Name</TableCell>\r\n            <TableCell align=\"left\">Company Id</TableCell>\r\n            <TableCell align=\"left\">Share ID</TableCell>\r\n            <TableCell align=\"left\">Share Type</TableCell>\r\n            <TableCell align=\"right\">Value</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {sharesList.map((row) => (\r\n            <TableRow key={row.name}>\r\n              <TableCell align=\"left\">\r\n                {row.companyName}\r\n              </TableCell>\r\n              <TableCell align=\"left\">{row.companyId}</TableCell>\r\n              <TableCell align=\"left\">{row.shareId}</TableCell>\r\n              <TableCell align=\"left\">{row.shareType}</TableCell>\r\n              <TableCell align=\"right\">{row.shareValue}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n    <TablePagination\r\n    rowsPerPageOptions={[10]}\r\n    component=\"div\"\r\n    count={totalDocs}\r\n    rowsPerPage={10}\r\n    page={page}\r\n    onChangePage={handleChangePage}\r\n  />\r\n  </Paper>\r\n  );\r\n};\r\n\r\nexport default UserSharesListTable;","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport socketIOClient from \"socket.io-client\";\r\n\r\nconst ENDPOINT = \"http://ec2-13-233-36-233.ap-south-1.compute.amazonaws.com:9000\";\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n});\r\n\r\nconst ShareListTable = () => {\r\n  const classes = useStyles();\r\n  const [sharesList, setSharesList] = useState([]);\r\n  //const [page, setPage] = useState(0);\r\n  //const [totalDocs, setTotalDocs] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const socket = socketIOClient(ENDPOINT);\r\n    socket.on(\"sharesList\", data => {\r\n      setSharesList(data.docs);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <Paper>\r\n    <TableContainer component={Paper}>\r\n      <Table size=\"small\" aria-label=\"a dense table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Company Name</TableCell>\r\n            <TableCell align=\"left\">Company Id</TableCell>\r\n            <TableCell align=\"left\">Share ID</TableCell>\r\n            <TableCell align=\"left\">Share Type</TableCell>\r\n            <TableCell align=\"right\">Value</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {sharesList.map((row) => (\r\n            <TableRow key={row.name}>\r\n              <TableCell align=\"left\">\r\n                {row.companyName}\r\n              </TableCell>\r\n              <TableCell align=\"left\">{row.companyId}</TableCell>\r\n              <TableCell align=\"left\">{row.shareId}</TableCell>\r\n              <TableCell align=\"left\">{row.shareType}</TableCell>\r\n              <TableCell align=\"right\">{row.shareValue}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  </Paper>\r\n  );\r\n};\r\n\r\nexport default ShareListTable;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Typography, Grid, Button } from '@material-ui/core';\r\n\r\nimport ShareList from './ShareList';\r\nimport UserShareList from './UserShareList';\r\nimport RealTimeShare from './RealtimeShare';\r\nimport { logout } from '../actions';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    marginLeft: theme.spacing(5),\r\n    marginTop: theme.spacing(3),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  container: {\r\n    marginTop: theme.spacing(3)\r\n  },\r\n}));\r\n\r\nconst Header = props => {\r\n  const { className, ...rest } = props;\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const { history } = props;\r\n  const session = useSelector(state => state.user);\r\n\r\n  const handleLogout = () => {\r\n    history.push('/login');\r\n    dispatch(logout());\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={classes.root}\r\n    >\r\n      <Grid\r\n        alignItems=\"center\"\r\n        container\r\n        justify=\"space-between\"\r\n        spacing={3}\r\n      >\r\n        <Grid\r\n          item\r\n          md={6}\r\n          xs={12}\r\n        >\r\n          <Typography\r\n            component=\"h2\"\r\n            gutterBottom\r\n            variant=\"overline\"\r\n          >\r\n            Home\r\n          </Typography>\r\n          <Typography\r\n            component=\"h1\"\r\n            gutterBottom\r\n            variant=\"h2\"\r\n          >\r\n            Welcome {session.name}\r\n          </Typography>\r\n          <Button\r\n            color=\"secondary\"\r\n            variant=\"contained\"\r\n            onClick={handleLogout}\r\n          >\r\n            LOG OUT\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid\r\n          className={classes.container}\r\n          container\r\n          spacing={3}\r\n        >\r\n          <Grid\r\n            item\r\n            lg={6}\r\n            sm={12}\r\n            xs={12}\r\n          >\r\n            <Typography\r\n            component=\"h3\"\r\n            gutterBottom\r\n            variant=\"h4\"\r\n          >\r\n            List of Shares\r\n          </Typography>\r\n            <ShareList/>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            lg={6}\r\n            sm={12}\r\n            xs={12}\r\n          >\r\n            <Typography\r\n            component=\"h3\"\r\n            gutterBottom\r\n            variant=\"h4\"\r\n          >\r\n            Your Shares\r\n          </Typography>\r\n            <UserShareList/>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            lg={6}\r\n            sm={12}\r\n            xs={12}\r\n          >\r\n            <Typography\r\n            component=\"h3\"\r\n            gutterBottom\r\n            variant=\"h4\"\r\n          >\r\n            Realtime Share Values\r\n          </Typography>\r\n            <RealTimeShare/>\r\n          </Grid>\r\n        </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default withRouter(Header);\r\n","import { colors } from '@material-ui/core';\n\nconst white = '#FFFFFF';\nconst black = '#000000';\n\nexport default {\n  black,\n  white,\n  primary: {\n    contrastText: white,\n    dark: colors.teal[900],\n    main: colors.teal[400],\n    light: colors.teal[100]\n  },\n  secondary: {\n    contrastText: white,\n    dark: colors.blue[900],\n    main: colors.blue['A400'],\n    light: colors.blue['A400']\n  },\n  error: {\n    contrastText: white,\n    dark: colors.red[900],\n    main: colors.red[600],\n    light: colors.red[400]\n  },\n  text: {\n    primary: colors.blueGrey[900],\n    secondary: colors.blueGrey[600],\n    link: colors.blue[600]\n  },\n  link: colors.blue[800],\n  icon: colors.blueGrey[600],\n  background: {\n    default: '#F4F6F8',\n    paper: white\n  },\n  divider: colors.grey[200]\n};\n","import palette from './palette';\n\nexport default {\n  h1: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '35px',\n    letterSpacing: '-0.24px',\n    lineHeight: '40px'\n  },\n  h2: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '29px',\n    letterSpacing: '-0.24px',\n    lineHeight: '32px'\n  },\n  h3: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '24px',\n    letterSpacing: '-0.06px',\n    lineHeight: '28px'\n  },\n  h4: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '20px',\n    letterSpacing: '-0.06px',\n    lineHeight: '24px'\n  },\n  h5: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '16px',\n    letterSpacing: '-0.05px',\n    lineHeight: '20px'\n  },\n  h6: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '14px',\n    letterSpacing: '-0.05px',\n    lineHeight: '20px'\n  },\n  subtitle1: {\n    color: palette.text.primary,\n    fontSize: '16px',\n    letterSpacing: '-0.05px',\n    lineHeight: '25px'\n  },\n  subtitle2: {\n    color: palette.text.secondary,\n    fontWeight: 400,\n    fontSize: '14px',\n    letterSpacing: '-0.05px',\n    lineHeight: '21px'\n  },\n  body1: {\n    color: palette.text.primary,\n    fontSize: '14px',\n    letterSpacing: '-0.05px',\n    lineHeight: '21px'\n  },\n  body2: {\n    color: palette.text.secondary,\n    fontSize: '12px',\n    letterSpacing: '-0.04px',\n    lineHeight: '18px'\n  },\n  button: {\n    color: palette.text.primary,\n    fontSize: '14px'\n  },\n  caption: {\n    color: palette.text.secondary,\n    fontSize: '11px',\n    letterSpacing: '0.33px',\n    lineHeight: '13px'\n  },\n  overline: {\n    color: palette.text.secondary,\n    fontSize: '11px',\n    fontWeight: 500,\n    letterSpacing: '0.33px',\n    lineHeight: '13px',\n    textTransform: 'uppercase'\n  }\n};\n","import { createMuiTheme } from '@material-ui/core';\n\nimport palette from './palette';\nimport typography from './typography';\n\nconst theme = createMuiTheme({\n  palette,\n  typography,\n});\n\nexport default theme;\n","import React, { useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\nimport MomentUtils from '@date-io/moment';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\n\nimport Dashboard from './components/Dashboard';\nimport Login from './components/Login';\nimport SignUp from './components/SignUp';\nimport Home from './components/Home';\nimport theme from './theme';\nimport { getUser } from './actions';\n\n\nconst App = () => {\n  const token = localStorage.getItem('token') || null;\n  const dispatch = useDispatch();\n  const { email } = useSelector(state => state.user);\n\n  useEffect(() => {\n    if (token) {\n      dispatch(getUser());\n    }\n  }, []);\n\n  let routes = (\n    <Switch>\n      <Route path=\"/register\" component={SignUp} />\n      <Route path=\"/login\" component={Login} />\n      <Redirect to=\"/login\" />\n    </Switch>\n  );\n\n  if (email) {\n    routes = (\n      <Switch>\n        <Route path=\"/home\" exact component={Home} />\n        <Redirect to=\"/home\" />\n      </Switch>\n    )\n  }\n\n  return (\n    <ThemeProvider theme={theme}>\n      <MuiPickersUtilsProvider utils={MomentUtils}>\n        <Router>\n          <Dashboard>\n            {routes}\n          </Dashboard>\n        </Router>\n      </MuiPickersUtilsProvider>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider as StoreProvider } from 'react-redux';\n\nimport configureStore from './store/configureStore';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = configureStore();\n\nReactDOM.render(\n  <StoreProvider store={store}>\n    <App />\n  </StoreProvider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}